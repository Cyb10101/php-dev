version: '3.8'

services:
  web:
    # Restart if aborted or start after reboot
    #restart: always

    #build: php-dev
    image: cyb10101/php-dev:apache-8.2

    volumes:
      - .:/app
      # Note: The docker socket is optional if no node container is needed
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ~/.ssh:/home/application/.ssh:ro
      # Note: /home/application/.ssh will be copied to /root/.ssh if is empty or not exists
      - ~/.composer/cache:/home/application/.composer/cache
      - ~/.gitconfig:/home/application/.gitconfig:ro

    environment:
      # domain.localhost and *.domain.localhost
      - VIRTUAL_HOST=~^(.+\.)?domain\.localhost$$

      # domain.localhost, www.domain.localhost
      #- VIRTUAL_HOST=domain.localhost,www.domain.localhost
      #- VIRTUAL_HOST=~^(www\.)?domain\.localhost$$

      # subdomain.domain.localhost
      #- VIRTUAL_HOST=subdomain.domain.localhost

      #- VIRTUAL_PROTO=https
      #- VIRTUAL_PORT=443

      - WEB_DOCUMENT_ROOT=/app/public
      - php.error_reporting=32767
      - php.display_errors=1
      - php.session.gc_maxlifetime=86400
      - PHP_DATE_TIMEZONE=Europe/Berlin

      # PHP_DEBUGGER: xdebug, blackfire or none
      - PHP_DEBUGGER=${PHP_DEBUGGER:-none}
      #- php.xdebug.cli_color=${XDEBUG_CLI_COLOR:-1}
      #- php.xdebug.max_nesting_level=${XDEBUG_MAX_NESTING_LEVEL:-400}

      # xDebug old:
      #- php.xdebug.remote_enable=${XDEBUG_REMOTE_ENABLE:-On}
      #- XDEBUG_REMOTE_CONNECT_BACK=${XDEBUG_REMOTE_CONNECT_BACK:-On}

      # xDebug new:
      #- php.xdebug.mode=${XDEBUG_MODE:-debug}
      #- php.xdebug.discover_client_host=${XDEBUG_DISCOVER_CLIENT_HOST:-true}
      #- php.xdebug.output_dir=${XDEBUG_OUTPUT_DIR:-/tmp}

      #- XDEBUG_REMOTE_AUTOSTART=${XDEBUG_REMOTE_AUTOSTART:-On}
      - XDEBUG_REMOTE_HOST=${XDEBUG_REMOTE_HOST:-}
      - XDEBUG_REMOTE_PORT=${XDEBUG_REMOTE_PORT:-9000}
      - php.xdebug.idekey=${XDEBUG_IDEKEY:-PHPSTORM}
      - php.xdebug.remote_log=${XDEBUG_REMOTE_LOG:-/tmp/xdebug.log}
      - BLACKFIRE_SERVER_ID=${BLACKFIRE_SERVER_ID:-}
      - BLACKFIRE_SERVER_TOKEN=${BLACKFIRE_SERVER_TOKEN:-}

      # SSL: Use default cert from global-nginx-proxy
      - CERT_NAME=default
      # SSL: Do not a redirect in global-nginx-proxy, if you use another port than 443
      - HTTPS_METHOD=noredirect
      # HTTP Strict Transport Security (Disable only for development)
      - HSTS=off

      # Project environment variables (enable what you need)
      - APP_ENV=${APP_ENV:-dev}
      - TYPO3_CONTEXT=${TYPO3_CONTEXT:-Development/Docker}
      - FLOW_CONTEXT=${FLOW_CONTEXT:-Development/Docker}
      - WP_ENVIRONMENT_TYPE=${WP_ENVIRONMENT_TYPE:-development}

      # Set user and group id
      - APPLICATION_UID=${APPLICATION_UID:-1000}
      - APPLICATION_GID=${APPLICATION_GID:-1000}
    working_dir: /app

  node:
    image: node:lts
    volumes:
      - ./:/app
    working_dir: /app
    environment:
      # Set user and group id
      - APPLICATION_UID=${APPLICATION_UID:-1000}
      - APPLICATION_GID=${APPLICATION_GID:-1000}
    stop_signal: SIGKILL
    entrypoint: bash -c 'groupmod -g $$APPLICATION_GID node; usermod -u $$APPLICATION_UID node; tail -f /dev/null'

networks:
  default:
    external: true
    name: global
